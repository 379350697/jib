/*
 * Copyright 2018 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

package com.google.cloud.tools.jib.image;

import com.google.cloud.tools.jib.image.json.HistoryEntry;
import com.google.common.collect.ImmutableList;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class LayerHistory {

  public static class Builder {

    private static final String HISTORY_ENTRY_AUTHOR = "Jib";
    private static final String HISTORY_ENTRY_AUTOFILL_COMMENT = "auto-generated by Jib";

    private final List<HistoryEntry> historyEntries = new ArrayList<>();
    private final HistoryEntry.Builder historyEntryBuilder =
        HistoryEntry.builder().setCreationTimestamp(Instant.EPOCH);

    private Builder(List<HistoryEntry> historyEntries) {
      addAll(historyEntries);
    }

    public HistoryEntry.Builder getHistoryEntryBuilder() {
      return historyEntryBuilder;
    }

    public Builder autofillTo(int totalEntries) {
      HistoryEntry autofillHistoryEntry =
          historyEntryBuilder.setComment(HISTORY_ENTRY_AUTOFILL_COMMENT).build();
      historyEntryBuilder.unsetComment();
      return fillTo(totalEntries, autofillHistoryEntry);
    }

    public Builder fillTo(int totalEntries, String createdBy) {
      HistoryEntry historyEntry =
          historyEntryBuilder.setAuthor(HISTORY_ENTRY_AUTHOR).setCreatedBy(createdBy).build();
      return fillTo(totalEntries, historyEntry);
    }

    public LayerHistory build() {
      return new LayerHistory(ImmutableList.copyOf(historyEntries));
    }

    Builder addAll(List<HistoryEntry> historyEntries) {
      this.historyEntries.addAll(historyEntries);
      return this;
    }

    private Builder fillTo(int totalEntries, HistoryEntry historyEntry) {
      historyEntries.addAll(
          Collections.nCopies(totalEntries - historyEntries.size(), historyEntry));
      return this;
    }
  }

  static Builder builder() {
    return new Builder(new ArrayList<>());
  }

  public static Builder builder(LayerHistory layerHistory) {
    return new Builder(layerHistory.getHistoryEntries());
  }

  private final ImmutableList<HistoryEntry> historyEntries;

  private LayerHistory(ImmutableList<HistoryEntry> historyEntries) {
    this.historyEntries = historyEntries;
  }

  public ImmutableList<HistoryEntry> getHistoryEntries() {
    return historyEntries;
  }
}
